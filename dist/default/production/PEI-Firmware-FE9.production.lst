

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 19 18:37:11 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 05/05/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F26K83 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _RXB1D7	set	14333
    57  0000                     _RXB1D6	set	14332
    58  0000                     _RXB1D5	set	14331
    59  0000                     _RXB1D4	set	14330
    60  0000                     _RXB1D3	set	14329
    61  0000                     _RXB1D2	set	14328
    62  0000                     _RXB1D1	set	14327
    63  0000                     _RXB1D0	set	14326
    64  0000                     _RXB1DLC	set	14325
    65  0000                     _RXB1SIDH	set	14321
    66  0000                     _RXB1EIDL	set	14324
    67  0000                     _RXB1EIDH	set	14323
    68  0000                     _RXB1SIDL	set	14322
    69  0000                     _RXB1CONbits	set	14320
    70  0000                     _TXB2D7	set	14285
    71  0000                     _TXB2D6	set	14284
    72  0000                     _TXB2D5	set	14283
    73  0000                     _TXB2D4	set	14282
    74  0000                     _TXB2D3	set	14281
    75  0000                     _TXB2D2	set	14280
    76  0000                     _TXB2D1	set	14279
    77  0000                     _TXB2D0	set	14278
    78  0000                     _TXB2DLC	set	14277
    79  0000                     _TXB2SIDL	set	14274
    80  0000                     _TXB2SIDH	set	14273
    81  0000                     _TXB2EIDL	set	14276
    82  0000                     _TXB2EIDH	set	14275
    83  0000                     _TXB2CONbits	set	14272
    84  0000                     _TXB1D7	set	14301
    85  0000                     _TXB1D6	set	14300
    86  0000                     _TXB1D5	set	14299
    87  0000                     _TXB1D4	set	14298
    88  0000                     _TXB1D3	set	14297
    89  0000                     _TXB1D2	set	14296
    90  0000                     _TXB1D1	set	14295
    91  0000                     _TXB1D0	set	14294
    92  0000                     _TXB1DLC	set	14293
    93  0000                     _TXB1SIDL	set	14290
    94  0000                     _TXB1SIDH	set	14289
    95  0000                     _TXB1EIDL	set	14292
    96  0000                     _TXB1EIDH	set	14291
    97  0000                     _TXB1CONbits	set	14288
    98  0000                     _TXB0D7	set	14317
    99  0000                     _TXB0D6	set	14316
   100  0000                     _TXB0D5	set	14315
   101  0000                     _TXB0D4	set	14314
   102  0000                     _TXB0D3	set	14313
   103  0000                     _TXB0D2	set	14312
   104  0000                     _TXB0D1	set	14311
   105  0000                     _TXB0D0	set	14310
   106  0000                     _TXB0DLC	set	14309
   107  0000                     _TXB0SIDL	set	14306
   108  0000                     _TXB0SIDH	set	14305
   109  0000                     _TXB0EIDL	set	14308
   110  0000                     _TXB0EIDH	set	14307
   111  0000                     _TXB0CONbits	set	14304
   112  0000                     _BRGCON3	set	14085
   113  0000                     _BRGCON2	set	14084
   114  0000                     _BRGCON1	set	14083
   115  0000                     _RXF5SIDL	set	14261
   116  0000                     _RXF5SIDH	set	14260
   117  0000                     _RXF5EIDL	set	14263
   118  0000                     _RXF5EIDH	set	14262
   119  0000                     _RXF4SIDL	set	14257
   120  0000                     _RXF4SIDH	set	14256
   121  0000                     _RXF4EIDL	set	14259
   122  0000                     _RXF4EIDH	set	14258
   123  0000                     _RXF3SIDL	set	14253
   124  0000                     _RXF3SIDH	set	14252
   125  0000                     _RXF3EIDL	set	14255
   126  0000                     _RXF3EIDH	set	14254
   127  0000                     _RXF2SIDL	set	14249
   128  0000                     _RXF2SIDH	set	14248
   129  0000                     _RXF2EIDL	set	14251
   130  0000                     _RXF2EIDH	set	14250
   131  0000                     _RXF1SIDL	set	14245
   132  0000                     _RXF1SIDH	set	14244
   133  0000                     _RXF1EIDL	set	14247
   134  0000                     _RXF1EIDH	set	14246
   135  0000                     _RXF0SIDL	set	14241
   136  0000                     _RXF0SIDH	set	14240
   137  0000                     _RXF0EIDL	set	14243
   138  0000                     _RXF0EIDH	set	14242
   139  0000                     _RXM1SIDL	set	14269
   140  0000                     _RXM1SIDH	set	14268
   141  0000                     _RXM1EIDL	set	14271
   142  0000                     _RXM1EIDH	set	14270
   143  0000                     _RXM0SIDL	set	14265
   144  0000                     _RXM0SIDH	set	14264
   145  0000                     _RXM0EIDL	set	14267
   146  0000                     _RXM0EIDH	set	14266
   147  0000                     _CIOCON	set	14080
   148  0000                     _PIE5bits	set	14741
   149  0000                     _PIR5bits	set	14757
   150  0000                     _PMD7	set	14791
   151  0000                     _PMD6	set	14790
   152  0000                     _PMD5	set	14789
   153  0000                     _PMD4	set	14788
   154  0000                     _PMD3	set	14787
   155  0000                     _PMD2	set	14786
   156  0000                     _PMD1	set	14785
   157  0000                     _PMD0	set	14784
   158  0000                     _OSCTUNE	set	14814
   159  0000                     _OSCFRQ	set	14815
   160  0000                     _OSCEN	set	14813
   161  0000                     _OSCCON3	set	14811
   162  0000                     _OSCCON1	set	14809
   163  0000                     _RB4PPS	set	14860
   164  0000                     _CANRXPPS	set	15085
   165  0000                     _INLVLE	set	14980
   166  0000                     _INLVLC	set	14948
   167  0000                     _INLVLB	set	14932
   168  0000                     _INLVLA	set	14916
   169  0000                     _SLRCONC	set	14947
   170  0000                     _SLRCONB	set	14931
   171  0000                     _SLRCONA	set	14915
   172  0000                     _ODCONC	set	14946
   173  0000                     _ODCONB	set	14930
   174  0000                     _ODCONA	set	14914
   175  0000                     _WPUC	set	14945
   176  0000                     _WPUA	set	14913
   177  0000                     _WPUB	set	14929
   178  0000                     _WPUE	set	14977
   179  0000                     _ANSELA	set	14912
   180  0000                     _ANSELB	set	14928
   181  0000                     _ANSELC	set	14944
   182  0000                     _ADCON1bits	set	16121
   183  0000                     _ADERRL	set	16098
   184  0000                     _ADERRH	set	16099
   185  0000                     _ADPREVL	set	16109
   186  0000                     _ADPREVH	set	16110
   187  0000                     _ADFLTRL	set	16102
   188  0000                     _ADFLTRH	set	16103
   189  0000                     _ADSTATbits	set	16124
   190  0000                     _ADACCL	set	16104
   191  0000                     _ADACCH	set	16105
   192  0000                     _ADCON2bits	set	16122
   193  0000                     _ADCNT	set	16107
   194  0000                     _ADCON3bits	set	16123
   195  0000                     _ADRESL	set	16111
   196  0000                     _ADRESH	set	16112
   197  0000                     _ADCON0bits	set	16120
   198  0000                     _ADCON0	set	16120
   199  0000                     _ADCLK	set	16127
   200  0000                     _ADACT	set	16126
   201  0000                     _ADREF	set	16125
   202  0000                     _ADSTAT	set	16124
   203  0000                     _ADCON3	set	16123
   204  0000                     _ADCON2	set	16122
   205  0000                     _ADCON1	set	16121
   206  0000                     _ADPREH	set	16119
   207  0000                     _ADPREL	set	16118
   208  0000                     _ADCAP	set	16117
   209  0000                     _ADACQH	set	16116
   210  0000                     _ADACQL	set	16115
   211  0000                     _ADPCH	set	16113
   212  0000                     _ADRPT	set	16108
   213  0000                     _ADACCU	set	16106
   214  0000                     _ADSTPTH	set	16101
   215  0000                     _ADSTPTL	set	16100
   216  0000                     _ADUTHH	set	16097
   217  0000                     _ADUTHL	set	16096
   218  0000                     _ADLTHH	set	16095
   219  0000                     _ADLTHL	set	16094
   220  0000                     _PORTCbits	set	16332
   221  0000                     _INTCON0bits	set	16338
   222  0000                     _COMSTATbits	set	16272
   223  0000                     _RXB0D7	set	16269
   224  0000                     _RXB0D6	set	16268
   225  0000                     _RXB0D5	set	16267
   226  0000                     _RXB0D4	set	16266
   227  0000                     _RXB0D3	set	16265
   228  0000                     _RXB0D2	set	16264
   229  0000                     _RXB0D1	set	16263
   230  0000                     _RXB0D0	set	16262
   231  0000                     _RXB0DLC	set	16261
   232  0000                     _RXB0SIDH	set	16257
   233  0000                     _RXB0EIDL	set	16260
   234  0000                     _RXB0EIDH	set	16259
   235  0000                     _RXB0SIDL	set	16258
   236  0000                     _RXB0CONbits	set	16256
   237  0000                     _ECANCON	set	16273
   238  0000                     _CANSTAT	set	16270
   239  0000                     _CANCON	set	16271
   240  0000                     _TRISC	set	16324
   241  0000                     _TRISB	set	16323
   242  0000                     _TRISA	set	16322
   243  0000                     _LATC	set	16316
   244  0000                     _LATB	set	16315
   245  0000                     _LATA	set	16314
   246                           
   247                           ; #config settings
   248                           
   249                           	psect	cinit
   250  0079D4                     __pcinit:
   251                           	callstack 0
   252  0079D4                     start_initialization:
   253                           	callstack 0
   254  0079D4                     __initialization:
   255                           	callstack 0
   256                           
   257                           ; Clear objects allocated to COMRAM (2 bytes)
   258  0079D4  6A3B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   259  0079D6  6A3A               	clrf	__pbssCOMRAM& (0+255),c
   260                           
   261                           ;
   262                           ; Setup IVTBASE
   263                           ;
   264  0079D8  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   265  0079DA  6ED5               	movwf	213,c
   266  0079DC  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   267  0079DE  6ED6               	movwf	214,c
   268  0079E0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   269  0079E2  6ED7               	movwf	215,c
   270  0079E4                     end_of_initialization:
   271                           	callstack 0
   272  0079E4                     __end_of__initialization:
   273                           	callstack 0
   274  0079E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   275  0079E6  6EF8               	movwf	tblptru,c
   276  0079E8  0100               	movlb	0
   277  0079EA  EF32  F03D         	goto	_main	;jump to C main() function
   278                           
   279                           	psect	bssCOMRAM
   280  00003A                     __pbssCOMRAM:
   281                           	callstack 0
   282  00003A                     _WakeUpInterruptHandler:
   283                           	callstack 0
   284  00003A                     	ds	2
   285                           
   286                           	psect	cstackCOMRAM
   287  000001                     __pcstackCOMRAM:
   288                           	callstack 0
   289  000001                     ?_ADCC_GetSingleConversion:
   290                           	callstack 0
   291  000001                     convertCANid2Reg@tempPassedInID:
   292                           	callstack 0
   293                           
   294                           ; 4 bytes @ 0x0
   295  000001                     	ds	2
   296  000003                     ??_ADCC_GetSingleConversion:
   297                           
   298                           ; 1 bytes @ 0x2
   299  000003                     	ds	2
   300  000005                     convertCANid2Reg@canIdType:
   301                           	callstack 0
   302  000005                     ADCC_GetSingleConversion@channel:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x4
   306  000005                     	ds	1
   307  000006                     convertCANid2Reg@passedInEIDH:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x5
   311  000006                     	ds	2
   312  000008                     convertCANid2Reg@passedInEIDL:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x7
   316  000008                     	ds	2
   317  00000A                     convertCANid2Reg@passedInSIDH:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x9
   321  00000A                     	ds	2
   322  00000C                     convertCANid2Reg@passedInSIDL:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0xB
   326  00000C                     	ds	2
   327  00000E                     ??_convertCANid2Reg:
   328                           
   329                           ; 1 bytes @ 0xD
   330  00000E                     	ds	4
   331  000012                     convertCANid2Reg@wipSIDL:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x11
   335  000012                     	ds	1
   336  000013                     CAN_transmit@tempCanMsg:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x12
   340  000013                     	ds	2
   341  000015                     CAN_transmit@tempEIDH:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x14
   345  000015                     	ds	1
   346  000016                     CAN_transmit@tempEIDL:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x15
   350  000016                     	ds	1
   351  000017                     CAN_transmit@tempSIDH:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x16
   355  000017                     	ds	1
   356  000018                     CAN_transmit@tempSIDL:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x17
   360  000018                     	ds	1
   361  000019                     ??_main:
   362                           
   363                           ; 1 bytes @ 0x18
   364  000019                     	ds	1
   365  00001A                     main@ReadyToDrive:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x19
   369  00001A                     	ds	1
   370  00001B                     main@ReadyToDriveSent:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x1A
   374  00001B                     	ds	1
   375  00001C                     main@current:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x1B
   379  00001C                     	ds	2
   380  00001E                     main@CanReadyToDrive:
   381                           	callstack 0
   382                           
   383                           ; 14 bytes @ 0x1D
   384  00001E                     	ds	14
   385  00002C                     main@CanCurrentData:
   386                           	callstack 0
   387                           
   388                           ; 14 bytes @ 0x2B
   389  00002C                     	ds	14
   390                           
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 49 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  ReadyToDrive    1   25[COMRAM] unsigned char 
   401 ;;  current         2   27[COMRAM] unsigned short 
   402 ;;  CanCurrentDa   14   43[COMRAM] struct .
   403 ;;  CanReadyToDr   14   29[COMRAM] struct .
   404 ;;  ReadyToDrive    1   26[COMRAM] _Bool 
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Locals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;Total ram usage:       33 bytes
   419 ;; Hardware stack levels required when called: 5
   420 ;; This function calls:
   421 ;;		_ADCC_GetSingleConversion
   422 ;;		_CAN_transmit
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text0
   429  007A64                     __ptext0:
   430                           	callstack 0
   431  007A64                     _main:
   432                           	callstack 26
   433  007A64                     
   434                           ;main.c: 52:     uCAN_MSG CanCurrentData;;main.c: 53:     CanCurrentData.frame.idType = 
      +                          0x00;
   435  007A64  0E00               	movlw	0
   436  007A66  6E2C               	movwf	main@CanCurrentData^0,c
   437                           
   438                           ;main.c: 54:     CanCurrentData.frame.id = 0x387;
   439  007A68  0E87               	movlw	135
   440  007A6A  6E2D               	movwf	(main@CanCurrentData+1)^0,c
   441  007A6C  0E03               	movlw	3
   442  007A6E  6E2E               	movwf	(main@CanCurrentData+2)^0,c
   443  007A70  0E00               	movlw	0
   444  007A72  6E2F               	movwf	(main@CanCurrentData+3)^0,c
   445  007A74  0E00               	movlw	0
   446  007A76  6E30               	movwf	(main@CanCurrentData+4)^0,c
   447                           
   448                           ;main.c: 55:     CanCurrentData.frame.dlc = 0x02;
   449  007A78  0E02               	movlw	2
   450  007A7A  6E31               	movwf	(main@CanCurrentData+5)^0,c
   451                           
   452                           ;main.c: 57:     uCAN_MSG CanReadyToDrive;;main.c: 58:     CanReadyToDrive.frame.idType 
      +                          = 0x00;
   453  007A7C  0E00               	movlw	0
   454  007A7E  6E1E               	movwf	main@CanReadyToDrive^0,c
   455                           
   456                           ;main.c: 59:     CanReadyToDrive.frame.id = 0x0D1;
   457  007A80  0ED1               	movlw	209
   458  007A82  6E1F               	movwf	(main@CanReadyToDrive+1)^0,c
   459  007A84  0E00               	movlw	0
   460  007A86  6E20               	movwf	(main@CanReadyToDrive+2)^0,c
   461  007A88  0E00               	movlw	0
   462  007A8A  6E21               	movwf	(main@CanReadyToDrive+3)^0,c
   463  007A8C  0E00               	movlw	0
   464  007A8E  6E22               	movwf	(main@CanReadyToDrive+4)^0,c
   465                           
   466                           ;main.c: 60:     CanReadyToDrive.frame.dlc = 0x01;
   467  007A90  0E01               	movlw	1
   468  007A92  6E23               	movwf	(main@CanReadyToDrive+5)^0,c
   469                           
   470                           ;main.c: 61:     CanReadyToDrive.frame.data0 = 1;
   471  007A94  0E01               	movlw	1
   472  007A96  6E24               	movwf	(main@CanReadyToDrive+6)^0,c
   473                           
   474                           ;main.c: 62:     _Bool ReadyToDriveSent = 0;
   475  007A98  0E00               	movlw	0
   476  007A9A  6E1B               	movwf	main@ReadyToDriveSent^0,c
   477  007A9C                     l1889:
   478                           
   479                           ;main.c: 65:     {;main.c: 68:         uint16_t current = ADCC_GetSingleConversion(chann
      +                          el_ANC0);
   480  007A9C  0E10               	movlw	16
   481  007A9E  EC19  F03D         	call	_ADCC_GetSingleConversion
   482  007AA2  C001  F01C         	movff	?_ADCC_GetSingleConversion,main@current
   483  007AA6  C002  F01D         	movff	?_ADCC_GetSingleConversion+1,main@current+1
   484  007AAA                     
   485                           ;main.c: 69:         CanCurrentData.frame.data0 = current >> 8;
   486  007AAA  501D               	movf	(main@current+1)^0,w,c
   487  007AAC  6E32               	movwf	(main@CanCurrentData+6)^0,c
   488  007AAE                     
   489                           ;main.c: 70:         CanCurrentData.frame.data1 = current & 0xFF;
   490  007AAE  C01C  F033         	movff	main@current,main@CanCurrentData+7
   491  007AB2                     
   492                           ;main.c: 71:         CAN_transmit(&CanCurrentData);
   493  007AB2  0E2C               	movlw	low main@CanCurrentData
   494  007AB4  6E13               	movwf	CAN_transmit@tempCanMsg^0,c
   495  007AB6  0E00               	movlw	high main@CanCurrentData
   496  007AB8  6E14               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
   497  007ABA  EC53  F03E         	call	_CAN_transmit	;wreg free
   498  007ABE                     
   499                           ;main.c: 75:         if(!ReadyToDriveSent)
   500  007ABE  501B               	movf	main@ReadyToDriveSent^0,w,c
   501  007AC0  A4D8               	btfss	status,2,c
   502  007AC2  EF65  F03D         	goto	u341
   503  007AC6  EF67  F03D         	goto	u340
   504  007ACA                     u341:
   505  007ACA  EF7B  F03D         	goto	l1907
   506  007ACE                     u340:
   507  007ACE                     
   508                           ;main.c: 76:         {;main.c: 79:             uint8_t ReadyToDrive = PORTCbits.RC3;
   509  007ACE  0E00               	movlw	0
   510  007AD0  B6CC               	btfsc	204,3,c	;volatile
   511  007AD2  0E01               	movlw	1
   512  007AD4  6E1A               	movwf	main@ReadyToDrive^0,c
   513  007AD6                     
   514                           ;main.c: 80:             if(ReadyToDrive)
   515  007AD6  501A               	movf	main@ReadyToDrive^0,w,c
   516  007AD8  B4D8               	btfsc	status,2,c
   517  007ADA  EF71  F03D         	goto	u351
   518  007ADE  EF73  F03D         	goto	u350
   519  007AE2                     u351:
   520  007AE2  EF7B  F03D         	goto	l1907
   521  007AE6                     u350:
   522  007AE6                     
   523                           ;main.c: 81:             {;main.c: 82:                 CAN_transmit(&CanReadyToDrive);
   524  007AE6  0E1E               	movlw	low main@CanReadyToDrive
   525  007AE8  6E13               	movwf	CAN_transmit@tempCanMsg^0,c
   526  007AEA  0E00               	movlw	high main@CanReadyToDrive
   527  007AEC  6E14               	movwf	(CAN_transmit@tempCanMsg+1)^0,c
   528  007AEE  EC53  F03E         	call	_CAN_transmit	;wreg free
   529  007AF2                     
   530                           ;main.c: 83:                 ReadyToDriveSent = 1;
   531  007AF2  0E01               	movlw	1
   532  007AF4  6E1B               	movwf	main@ReadyToDriveSent^0,c
   533  007AF6                     l1907:
   534                           
   535                           ;main.c: 88:         _delay((unsigned long)((500)*(1000000/4000.0)));
   536  007AF6  0EA3               	movlw	163
   537  007AF8  6E19               	movwf	??_main^0,c
   538  007AFA  0E55               	movlw	85
   539  007AFC                     u367:
   540  007AFC  2EE8               	decfsz	wreg,f,c
   541  007AFE  D7FE               	bra	u367
   542  007B00  2E19               	decfsz	??_main^0,f,c
   543  007B02  D7FC               	bra	u367
   544  007B04  F000               	nop	
   545  007B06  EF4E  F03D         	goto	l1889
   546  007B0A  EFFE  F03F         	goto	start
   547  007B0E                     __end_of_main:
   548                           	callstack 0
   549                           
   550 ;; *************** function _CAN_transmit *****************
   551 ;; Defined at:
   552 ;;		line 165 in file "mcc_generated_files/ecan.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;  tempCanMsg      2   18[COMRAM] PTR struct .
   555 ;;		 -> main@CanReadyToDrive(14), main@CanCurrentData(14), 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  tempSIDL        1   23[COMRAM] unsigned char 
   558 ;;  tempSIDH        1   22[COMRAM] unsigned char 
   559 ;;  tempEIDL        1   21[COMRAM] unsigned char 
   560 ;;  tempEIDH        1   20[COMRAM] unsigned char 
   561 ;;  returnValue     1    0        unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      unsigned char 
   564 ;; Registers used:
   565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;Total ram usage:        6 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; Hardware stack levels required when called: 4
   578 ;; This function calls:
   579 ;;		_convertCANid2Reg
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text1
   586  007CA6                     __ptext1:
   587                           	callstack 0
   588  007CA6                     _CAN_transmit:
   589                           	callstack 26
   590  007CA6                     
   591                           ;mcc_generated_files/ecan.c: 166:     uint8_t tempEIDH = 0;
   592  007CA6  0E00               	movlw	0
   593  007CA8  6E15               	movwf	CAN_transmit@tempEIDH^0,c
   594                           
   595                           ;mcc_generated_files/ecan.c: 167:     uint8_t tempEIDL = 0;
   596  007CAA  0E00               	movlw	0
   597  007CAC  6E16               	movwf	CAN_transmit@tempEIDL^0,c
   598                           
   599                           ;mcc_generated_files/ecan.c: 168:     uint8_t tempSIDH = 0;
   600  007CAE  0E00               	movlw	0
   601  007CB0  6E17               	movwf	CAN_transmit@tempSIDH^0,c
   602                           
   603                           ;mcc_generated_files/ecan.c: 169:     uint8_t tempSIDL = 0;
   604  007CB2  0E00               	movlw	0
   605  007CB4  6E18               	movwf	CAN_transmit@tempSIDL^0,c
   606  007CB6                     
   607                           ;mcc_generated_files/ecan.c: 173:     if (TXB0CONbits.TXREQ != 1)
   608  007CB6  0137               	movlb	55	; () banked
   609  007CB8  B7E0               	btfsc	224,3,b	;volatile
   610  007CBA  EF61  F03E         	goto	u301
   611  007CBE  EF63  F03E         	goto	u300
   612  007CC2                     u301:
   613  007CC2  EFE7  F03E         	goto	l358
   614  007CC6                     u300:
   615  007CC6                     
   616                           ; BSR set to: 55
   617                           ;mcc_generated_files/ecan.c: 174:     {;mcc_generated_files/ecan.c: 175:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
   618  007CC6  EE20 F001          	lfsr	2,1
   619  007CCA  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   620  007CCC  26D9               	addwf	fsr2l,f,c
   621  007CCE  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   622  007CD0  22DA               	addwfc	fsr2h,f,c
   623  007CD2  006F FF78  F001    	movff	postinc2,convertCANid2Reg@tempPassedInID
   624  007CD8  006F FF78  F002    	movff	postinc2,convertCANid2Reg@tempPassedInID+1
   625  007CDE  006F FF78  F003    	movff	postinc2,convertCANid2Reg@tempPassedInID+2
   626  007CE4  006F FF78  F004    	movff	postinc2,convertCANid2Reg@tempPassedInID+3
   627  007CEA  0060  F04F  FFD9   	movff	CAN_transmit@tempCanMsg,fsr2l
   628  007CF0  0060  F053  FFDA   	movff	CAN_transmit@tempCanMsg+1,fsr2h
   629  007CF6  50DF               	movf	indf2,w,c
   630  007CF8  6E05               	movwf	convertCANid2Reg@canIdType^0,c
   631  007CFA  0E15               	movlw	low CAN_transmit@tempEIDH
   632  007CFC  6E06               	movwf	convertCANid2Reg@passedInEIDH^0,c
   633  007CFE  0E00               	movlw	high CAN_transmit@tempEIDH
   634  007D00  6E07               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
   635  007D02  0E16               	movlw	low CAN_transmit@tempEIDL
   636  007D04  6E08               	movwf	convertCANid2Reg@passedInEIDL^0,c
   637  007D06  0E00               	movlw	high CAN_transmit@tempEIDL
   638  007D08  6E09               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
   639  007D0A  0E17               	movlw	low CAN_transmit@tempSIDH
   640  007D0C  6E0A               	movwf	convertCANid2Reg@passedInSIDH^0,c
   641  007D0E  0E00               	movlw	high CAN_transmit@tempSIDH
   642  007D10  6E0B               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
   643  007D12  0E18               	movlw	low CAN_transmit@tempSIDL
   644  007D14  6E0C               	movwf	convertCANid2Reg@passedInSIDL^0,c
   645  007D16  0E00               	movlw	high CAN_transmit@tempSIDL
   646  007D18  6E0D               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
   647  007D1A  EC87  F03D         	call	_convertCANid2Reg	;wreg free
   648  007D1E                     
   649                           ;mcc_generated_files/ecan.c: 177:         TXB0EIDH = tempEIDH;
   650  007D1E  0060  F057  F7E3   	movff	CAN_transmit@tempEIDH,14307	;volatile
   651  007D24                     
   652                           ;mcc_generated_files/ecan.c: 178:         TXB0EIDL = tempEIDL;
   653  007D24  0060  F05B  F7E4   	movff	CAN_transmit@tempEIDL,14308	;volatile
   654  007D2A                     
   655                           ;mcc_generated_files/ecan.c: 179:         TXB0SIDH = tempSIDH;
   656  007D2A  0060  F05F  F7E1   	movff	CAN_transmit@tempSIDH,14305	;volatile
   657  007D30                     
   658                           ;mcc_generated_files/ecan.c: 180:         TXB0SIDL = tempSIDL;
   659  007D30  0060  F063  F7E2   	movff	CAN_transmit@tempSIDL,14306	;volatile
   660  007D36                     
   661                           ;mcc_generated_files/ecan.c: 181:         TXB0DLC = tempCanMsg->frame.dlc;
   662  007D36  EE20 F005          	lfsr	2,5
   663  007D3A  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   664  007D3C  26D9               	addwf	fsr2l,f,c
   665  007D3E  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   666  007D40  22DA               	addwfc	fsr2h,f,c
   667  007D42  50DF               	movf	indf2,w,c
   668  007D44  0137               	movlb	55	; () banked
   669  007D46  6FE5               	movwf	229,b	;volatile
   670  007D48                     
   671                           ; BSR set to: 55
   672                           ;mcc_generated_files/ecan.c: 182:         TXB0D0 = tempCanMsg->frame.data0;
   673  007D48  EE20 F006          	lfsr	2,6
   674  007D4C  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   675  007D4E  26D9               	addwf	fsr2l,f,c
   676  007D50  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   677  007D52  22DA               	addwfc	fsr2h,f,c
   678  007D54  50DF               	movf	indf2,w,c
   679  007D56  6FE6               	movwf	230,b	;volatile
   680  007D58                     
   681                           ; BSR set to: 55
   682                           ;mcc_generated_files/ecan.c: 183:         TXB0D1 = tempCanMsg->frame.data1;
   683  007D58  EE20 F007          	lfsr	2,7
   684  007D5C  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   685  007D5E  26D9               	addwf	fsr2l,f,c
   686  007D60  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   687  007D62  22DA               	addwfc	fsr2h,f,c
   688  007D64  50DF               	movf	indf2,w,c
   689  007D66  6FE7               	movwf	231,b	;volatile
   690  007D68                     
   691                           ; BSR set to: 55
   692                           ;mcc_generated_files/ecan.c: 184:         TXB0D2 = tempCanMsg->frame.data2;
   693  007D68  EE20 F008          	lfsr	2,8
   694  007D6C  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   695  007D6E  26D9               	addwf	fsr2l,f,c
   696  007D70  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   697  007D72  22DA               	addwfc	fsr2h,f,c
   698  007D74  50DF               	movf	indf2,w,c
   699  007D76  6FE8               	movwf	232,b	;volatile
   700  007D78                     
   701                           ; BSR set to: 55
   702                           ;mcc_generated_files/ecan.c: 185:         TXB0D3 = tempCanMsg->frame.data3;
   703  007D78  EE20 F009          	lfsr	2,9
   704  007D7C  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   705  007D7E  26D9               	addwf	fsr2l,f,c
   706  007D80  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   707  007D82  22DA               	addwfc	fsr2h,f,c
   708  007D84  50DF               	movf	indf2,w,c
   709  007D86  6FE9               	movwf	233,b	;volatile
   710  007D88                     
   711                           ; BSR set to: 55
   712                           ;mcc_generated_files/ecan.c: 186:         TXB0D4 = tempCanMsg->frame.data4;
   713  007D88  EE20 F00A          	lfsr	2,10
   714  007D8C  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   715  007D8E  26D9               	addwf	fsr2l,f,c
   716  007D90  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   717  007D92  22DA               	addwfc	fsr2h,f,c
   718  007D94  50DF               	movf	indf2,w,c
   719  007D96  6FEA               	movwf	234,b	;volatile
   720  007D98                     
   721                           ; BSR set to: 55
   722                           ;mcc_generated_files/ecan.c: 187:         TXB0D5 = tempCanMsg->frame.data5;
   723  007D98  EE20 F00B          	lfsr	2,11
   724  007D9C  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   725  007D9E  26D9               	addwf	fsr2l,f,c
   726  007DA0  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   727  007DA2  22DA               	addwfc	fsr2h,f,c
   728  007DA4  50DF               	movf	indf2,w,c
   729  007DA6  6FEB               	movwf	235,b	;volatile
   730  007DA8                     
   731                           ; BSR set to: 55
   732                           ;mcc_generated_files/ecan.c: 188:         TXB0D6 = tempCanMsg->frame.data6;
   733  007DA8  EE20 F00C          	lfsr	2,12
   734  007DAC  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   735  007DAE  26D9               	addwf	fsr2l,f,c
   736  007DB0  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   737  007DB2  22DA               	addwfc	fsr2h,f,c
   738  007DB4  50DF               	movf	indf2,w,c
   739  007DB6  6FEC               	movwf	236,b	;volatile
   740  007DB8                     
   741                           ; BSR set to: 55
   742                           ;mcc_generated_files/ecan.c: 189:         TXB0D7 = tempCanMsg->frame.data7;
   743  007DB8  EE20 F00D          	lfsr	2,13
   744  007DBC  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   745  007DBE  26D9               	addwf	fsr2l,f,c
   746  007DC0  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   747  007DC2  22DA               	addwfc	fsr2h,f,c
   748  007DC4  50DF               	movf	indf2,w,c
   749  007DC6  6FED               	movwf	237,b	;volatile
   750  007DC8                     
   751                           ; BSR set to: 55
   752                           ;mcc_generated_files/ecan.c: 191:         TXB0CONbits.TXREQ = 1;
   753  007DC8  87E0               	bsf	224,3,b	;volatile
   754  007DCA                     l1807:
   755                           
   756                           ; BSR set to: 55
   757                           ;mcc_generated_files/ecan.c: 194:     }
   758  007DCA  EFFD  F03F         	goto	l363
   759  007DCE                     l358:
   760                           
   761                           ; BSR set to: 55
   762  007DCE  B7D0               	btfsc	208,3,b	;volatile
   763  007DD0  EFEC  F03E         	goto	u311
   764  007DD4  EFEE  F03E         	goto	u310
   765  007DD8                     u311:
   766  007DD8  EF72  F03F         	goto	l360
   767  007DDC                     u310:
   768  007DDC                     
   769                           ; BSR set to: 55
   770                           ;mcc_generated_files/ecan.c: 196:     {;mcc_generated_files/ecan.c: 198:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
   771  007DDC  EE20 F001          	lfsr	2,1
   772  007DE0  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   773  007DE2  26D9               	addwf	fsr2l,f,c
   774  007DE4  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   775  007DE6  22DA               	addwfc	fsr2h,f,c
   776  007DE8  006F FF78  F001    	movff	postinc2,convertCANid2Reg@tempPassedInID
   777  007DEE  006F FF78  F002    	movff	postinc2,convertCANid2Reg@tempPassedInID+1
   778  007DF4  006F FF78  F003    	movff	postinc2,convertCANid2Reg@tempPassedInID+2
   779  007DFA  006F FF78  F004    	movff	postinc2,convertCANid2Reg@tempPassedInID+3
   780  007E00  0060  F04F  FFD9   	movff	CAN_transmit@tempCanMsg,fsr2l
   781  007E06  0060  F053  FFDA   	movff	CAN_transmit@tempCanMsg+1,fsr2h
   782  007E0C  50DF               	movf	indf2,w,c
   783  007E0E  6E05               	movwf	convertCANid2Reg@canIdType^0,c
   784  007E10  0E15               	movlw	low CAN_transmit@tempEIDH
   785  007E12  6E06               	movwf	convertCANid2Reg@passedInEIDH^0,c
   786  007E14  0E00               	movlw	high CAN_transmit@tempEIDH
   787  007E16  6E07               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
   788  007E18  0E16               	movlw	low CAN_transmit@tempEIDL
   789  007E1A  6E08               	movwf	convertCANid2Reg@passedInEIDL^0,c
   790  007E1C  0E00               	movlw	high CAN_transmit@tempEIDL
   791  007E1E  6E09               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
   792  007E20  0E17               	movlw	low CAN_transmit@tempSIDH
   793  007E22  6E0A               	movwf	convertCANid2Reg@passedInSIDH^0,c
   794  007E24  0E00               	movlw	high CAN_transmit@tempSIDH
   795  007E26  6E0B               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
   796  007E28  0E18               	movlw	low CAN_transmit@tempSIDL
   797  007E2A  6E0C               	movwf	convertCANid2Reg@passedInSIDL^0,c
   798  007E2C  0E00               	movlw	high CAN_transmit@tempSIDL
   799  007E2E  6E0D               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
   800  007E30  EC87  F03D         	call	_convertCANid2Reg	;wreg free
   801  007E34                     
   802                           ;mcc_generated_files/ecan.c: 200:         TXB1EIDH = tempEIDH;
   803  007E34  0060  F057  F7D3   	movff	CAN_transmit@tempEIDH,14291	;volatile
   804  007E3A                     
   805                           ;mcc_generated_files/ecan.c: 201:         TXB1EIDL = tempEIDL;
   806  007E3A  0060  F05B  F7D4   	movff	CAN_transmit@tempEIDL,14292	;volatile
   807  007E40                     
   808                           ;mcc_generated_files/ecan.c: 202:         TXB1SIDH = tempSIDH;
   809  007E40  0060  F05F  F7D1   	movff	CAN_transmit@tempSIDH,14289	;volatile
   810  007E46                     
   811                           ;mcc_generated_files/ecan.c: 203:         TXB1SIDL = tempSIDL;
   812  007E46  0060  F063  F7D2   	movff	CAN_transmit@tempSIDL,14290	;volatile
   813  007E4C                     
   814                           ;mcc_generated_files/ecan.c: 204:         TXB1DLC = tempCanMsg->frame.dlc;
   815  007E4C  EE20 F005          	lfsr	2,5
   816  007E50  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   817  007E52  26D9               	addwf	fsr2l,f,c
   818  007E54  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   819  007E56  22DA               	addwfc	fsr2h,f,c
   820  007E58  50DF               	movf	indf2,w,c
   821  007E5A  0137               	movlb	55	; () banked
   822  007E5C  6FD5               	movwf	213,b	;volatile
   823  007E5E                     
   824                           ; BSR set to: 55
   825                           ;mcc_generated_files/ecan.c: 205:         TXB1D0 = tempCanMsg->frame.data0;
   826  007E5E  EE20 F006          	lfsr	2,6
   827  007E62  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   828  007E64  26D9               	addwf	fsr2l,f,c
   829  007E66  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   830  007E68  22DA               	addwfc	fsr2h,f,c
   831  007E6A  50DF               	movf	indf2,w,c
   832  007E6C  6FD6               	movwf	214,b	;volatile
   833  007E6E                     
   834                           ; BSR set to: 55
   835                           ;mcc_generated_files/ecan.c: 206:         TXB1D1 = tempCanMsg->frame.data1;
   836  007E6E  EE20 F007          	lfsr	2,7
   837  007E72  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   838  007E74  26D9               	addwf	fsr2l,f,c
   839  007E76  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   840  007E78  22DA               	addwfc	fsr2h,f,c
   841  007E7A  50DF               	movf	indf2,w,c
   842  007E7C  6FD7               	movwf	215,b	;volatile
   843  007E7E                     
   844                           ; BSR set to: 55
   845                           ;mcc_generated_files/ecan.c: 207:         TXB1D2 = tempCanMsg->frame.data2;
   846  007E7E  EE20 F008          	lfsr	2,8
   847  007E82  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   848  007E84  26D9               	addwf	fsr2l,f,c
   849  007E86  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   850  007E88  22DA               	addwfc	fsr2h,f,c
   851  007E8A  50DF               	movf	indf2,w,c
   852  007E8C  6FD8               	movwf	216,b	;volatile
   853  007E8E                     
   854                           ; BSR set to: 55
   855                           ;mcc_generated_files/ecan.c: 208:         TXB1D3 = tempCanMsg->frame.data3;
   856  007E8E  EE20 F009          	lfsr	2,9
   857  007E92  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   858  007E94  26D9               	addwf	fsr2l,f,c
   859  007E96  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   860  007E98  22DA               	addwfc	fsr2h,f,c
   861  007E9A  50DF               	movf	indf2,w,c
   862  007E9C  6FD9               	movwf	217,b	;volatile
   863  007E9E                     
   864                           ; BSR set to: 55
   865                           ;mcc_generated_files/ecan.c: 209:         TXB1D4 = tempCanMsg->frame.data4;
   866  007E9E  EE20 F00A          	lfsr	2,10
   867  007EA2  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   868  007EA4  26D9               	addwf	fsr2l,f,c
   869  007EA6  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   870  007EA8  22DA               	addwfc	fsr2h,f,c
   871  007EAA  50DF               	movf	indf2,w,c
   872  007EAC  6FDA               	movwf	218,b	;volatile
   873  007EAE                     
   874                           ; BSR set to: 55
   875                           ;mcc_generated_files/ecan.c: 210:         TXB1D5 = tempCanMsg->frame.data5;
   876  007EAE  EE20 F00B          	lfsr	2,11
   877  007EB2  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   878  007EB4  26D9               	addwf	fsr2l,f,c
   879  007EB6  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   880  007EB8  22DA               	addwfc	fsr2h,f,c
   881  007EBA  50DF               	movf	indf2,w,c
   882  007EBC  6FDB               	movwf	219,b	;volatile
   883  007EBE                     
   884                           ; BSR set to: 55
   885                           ;mcc_generated_files/ecan.c: 211:         TXB1D6 = tempCanMsg->frame.data6;
   886  007EBE  EE20 F00C          	lfsr	2,12
   887  007EC2  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   888  007EC4  26D9               	addwf	fsr2l,f,c
   889  007EC6  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   890  007EC8  22DA               	addwfc	fsr2h,f,c
   891  007ECA  50DF               	movf	indf2,w,c
   892  007ECC  6FDC               	movwf	220,b	;volatile
   893  007ECE                     
   894                           ; BSR set to: 55
   895                           ;mcc_generated_files/ecan.c: 212:         TXB1D7 = tempCanMsg->frame.data7;
   896  007ECE  EE20 F00D          	lfsr	2,13
   897  007ED2  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   898  007ED4  26D9               	addwf	fsr2l,f,c
   899  007ED6  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   900  007ED8  22DA               	addwfc	fsr2h,f,c
   901  007EDA  50DF               	movf	indf2,w,c
   902  007EDC  6FDD               	movwf	221,b	;volatile
   903  007EDE                     
   904                           ; BSR set to: 55
   905                           ;mcc_generated_files/ecan.c: 214:         TXB1CONbits.TXREQ = 1;
   906  007EDE  87D0               	bsf	208,3,b	;volatile
   907  007EE0  EFE5  F03E         	goto	l1807
   908  007EE4                     l360:
   909                           
   910                           ; BSR set to: 55
   911  007EE4  B7C0               	btfsc	192,3,b	;volatile
   912  007EE6  EF77  F03F         	goto	u321
   913  007EEA  EF79  F03F         	goto	u320
   914  007EEE                     u321:
   915  007EEE  EFFD  F03F         	goto	l359
   916  007EF2                     u320:
   917  007EF2                     
   918                           ; BSR set to: 55
   919                           ;mcc_generated_files/ecan.c: 218:     {;mcc_generated_files/ecan.c: 220:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
   920  007EF2  EE20 F001          	lfsr	2,1
   921  007EF6  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   922  007EF8  26D9               	addwf	fsr2l,f,c
   923  007EFA  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   924  007EFC  22DA               	addwfc	fsr2h,f,c
   925  007EFE  006F FF78  F001    	movff	postinc2,convertCANid2Reg@tempPassedInID
   926  007F04  006F FF78  F002    	movff	postinc2,convertCANid2Reg@tempPassedInID+1
   927  007F0A  006F FF78  F003    	movff	postinc2,convertCANid2Reg@tempPassedInID+2
   928  007F10  006F FF78  F004    	movff	postinc2,convertCANid2Reg@tempPassedInID+3
   929  007F16  0060  F04F  FFD9   	movff	CAN_transmit@tempCanMsg,fsr2l
   930  007F1C  0060  F053  FFDA   	movff	CAN_transmit@tempCanMsg+1,fsr2h
   931  007F22  50DF               	movf	indf2,w,c
   932  007F24  6E05               	movwf	convertCANid2Reg@canIdType^0,c
   933  007F26  0E15               	movlw	low CAN_transmit@tempEIDH
   934  007F28  6E06               	movwf	convertCANid2Reg@passedInEIDH^0,c
   935  007F2A  0E00               	movlw	high CAN_transmit@tempEIDH
   936  007F2C  6E07               	movwf	(convertCANid2Reg@passedInEIDH+1)^0,c
   937  007F2E  0E16               	movlw	low CAN_transmit@tempEIDL
   938  007F30  6E08               	movwf	convertCANid2Reg@passedInEIDL^0,c
   939  007F32  0E00               	movlw	high CAN_transmit@tempEIDL
   940  007F34  6E09               	movwf	(convertCANid2Reg@passedInEIDL+1)^0,c
   941  007F36  0E17               	movlw	low CAN_transmit@tempSIDH
   942  007F38  6E0A               	movwf	convertCANid2Reg@passedInSIDH^0,c
   943  007F3A  0E00               	movlw	high CAN_transmit@tempSIDH
   944  007F3C  6E0B               	movwf	(convertCANid2Reg@passedInSIDH+1)^0,c
   945  007F3E  0E18               	movlw	low CAN_transmit@tempSIDL
   946  007F40  6E0C               	movwf	convertCANid2Reg@passedInSIDL^0,c
   947  007F42  0E00               	movlw	high CAN_transmit@tempSIDL
   948  007F44  6E0D               	movwf	(convertCANid2Reg@passedInSIDL+1)^0,c
   949  007F46  EC87  F03D         	call	_convertCANid2Reg	;wreg free
   950  007F4A                     
   951                           ;mcc_generated_files/ecan.c: 222:         TXB2EIDH = tempEIDH;
   952  007F4A  0060  F057  F7C3   	movff	CAN_transmit@tempEIDH,14275	;volatile
   953  007F50                     
   954                           ;mcc_generated_files/ecan.c: 223:         TXB2EIDL = tempEIDL;
   955  007F50  0060  F05B  F7C4   	movff	CAN_transmit@tempEIDL,14276	;volatile
   956  007F56                     
   957                           ;mcc_generated_files/ecan.c: 224:         TXB2SIDH = tempSIDH;
   958  007F56  0060  F05F  F7C1   	movff	CAN_transmit@tempSIDH,14273	;volatile
   959  007F5C                     
   960                           ;mcc_generated_files/ecan.c: 225:         TXB2SIDL = tempSIDL;
   961  007F5C  0060  F063  F7C2   	movff	CAN_transmit@tempSIDL,14274	;volatile
   962  007F62                     
   963                           ;mcc_generated_files/ecan.c: 226:         TXB2DLC = tempCanMsg->frame.dlc;
   964  007F62  EE20 F005          	lfsr	2,5
   965  007F66  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   966  007F68  26D9               	addwf	fsr2l,f,c
   967  007F6A  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   968  007F6C  22DA               	addwfc	fsr2h,f,c
   969  007F6E  50DF               	movf	indf2,w,c
   970  007F70  0137               	movlb	55	; () banked
   971  007F72  6FC5               	movwf	197,b	;volatile
   972  007F74                     
   973                           ; BSR set to: 55
   974                           ;mcc_generated_files/ecan.c: 227:         TXB2D0 = tempCanMsg->frame.data0;
   975  007F74  EE20 F006          	lfsr	2,6
   976  007F78  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   977  007F7A  26D9               	addwf	fsr2l,f,c
   978  007F7C  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   979  007F7E  22DA               	addwfc	fsr2h,f,c
   980  007F80  50DF               	movf	indf2,w,c
   981  007F82  6FC6               	movwf	198,b	;volatile
   982  007F84                     
   983                           ; BSR set to: 55
   984                           ;mcc_generated_files/ecan.c: 228:         TXB2D1 = tempCanMsg->frame.data1;
   985  007F84  EE20 F007          	lfsr	2,7
   986  007F88  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   987  007F8A  26D9               	addwf	fsr2l,f,c
   988  007F8C  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   989  007F8E  22DA               	addwfc	fsr2h,f,c
   990  007F90  50DF               	movf	indf2,w,c
   991  007F92  6FC7               	movwf	199,b	;volatile
   992  007F94                     
   993                           ; BSR set to: 55
   994                           ;mcc_generated_files/ecan.c: 229:         TXB2D2 = tempCanMsg->frame.data2;
   995  007F94  EE20 F008          	lfsr	2,8
   996  007F98  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
   997  007F9A  26D9               	addwf	fsr2l,f,c
   998  007F9C  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
   999  007F9E  22DA               	addwfc	fsr2h,f,c
  1000  007FA0  50DF               	movf	indf2,w,c
  1001  007FA2  6FC8               	movwf	200,b	;volatile
  1002  007FA4                     
  1003                           ; BSR set to: 55
  1004                           ;mcc_generated_files/ecan.c: 230:         TXB2D3 = tempCanMsg->frame.data3;
  1005  007FA4  EE20 F009          	lfsr	2,9
  1006  007FA8  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
  1007  007FAA  26D9               	addwf	fsr2l,f,c
  1008  007FAC  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  1009  007FAE  22DA               	addwfc	fsr2h,f,c
  1010  007FB0  50DF               	movf	indf2,w,c
  1011  007FB2  6FC9               	movwf	201,b	;volatile
  1012  007FB4                     
  1013                           ; BSR set to: 55
  1014                           ;mcc_generated_files/ecan.c: 231:         TXB2D4 = tempCanMsg->frame.data4;
  1015  007FB4  EE20 F00A          	lfsr	2,10
  1016  007FB8  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
  1017  007FBA  26D9               	addwf	fsr2l,f,c
  1018  007FBC  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  1019  007FBE  22DA               	addwfc	fsr2h,f,c
  1020  007FC0  50DF               	movf	indf2,w,c
  1021  007FC2  6FCA               	movwf	202,b	;volatile
  1022  007FC4                     
  1023                           ; BSR set to: 55
  1024                           ;mcc_generated_files/ecan.c: 232:         TXB2D5 = tempCanMsg->frame.data5;
  1025  007FC4  EE20 F00B          	lfsr	2,11
  1026  007FC8  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
  1027  007FCA  26D9               	addwf	fsr2l,f,c
  1028  007FCC  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  1029  007FCE  22DA               	addwfc	fsr2h,f,c
  1030  007FD0  50DF               	movf	indf2,w,c
  1031  007FD2  6FCB               	movwf	203,b	;volatile
  1032  007FD4                     
  1033                           ; BSR set to: 55
  1034                           ;mcc_generated_files/ecan.c: 233:         TXB2D6 = tempCanMsg->frame.data6;
  1035  007FD4  EE20 F00C          	lfsr	2,12
  1036  007FD8  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
  1037  007FDA  26D9               	addwf	fsr2l,f,c
  1038  007FDC  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  1039  007FDE  22DA               	addwfc	fsr2h,f,c
  1040  007FE0  50DF               	movf	indf2,w,c
  1041  007FE2  6FCC               	movwf	204,b	;volatile
  1042  007FE4                     
  1043                           ; BSR set to: 55
  1044                           ;mcc_generated_files/ecan.c: 234:         TXB2D7 = tempCanMsg->frame.data7;
  1045  007FE4  EE20 F00D          	lfsr	2,13
  1046  007FE8  5013               	movf	CAN_transmit@tempCanMsg^0,w,c
  1047  007FEA  26D9               	addwf	fsr2l,f,c
  1048  007FEC  5014               	movf	(CAN_transmit@tempCanMsg+1)^0,w,c
  1049  007FEE  22DA               	addwfc	fsr2h,f,c
  1050  007FF0  50DF               	movf	indf2,w,c
  1051  007FF2  6FCD               	movwf	205,b	;volatile
  1052  007FF4                     
  1053                           ; BSR set to: 55
  1054                           ;mcc_generated_files/ecan.c: 236:         TXB2CONbits.TXREQ = 1;
  1055  007FF4  87C0               	bsf	192,3,b	;volatile
  1056  007FF6  EFE5  F03E         	goto	l1807
  1057  007FFA                     l359:
  1058  007FFA                     l363:
  1059                           
  1060                           ; BSR set to: 55
  1061  007FFA  0012               	return		;funcret
  1062  007FFC                     __end_of_CAN_transmit:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _convertCANid2Reg *****************
  1066 ;; Defined at:
  1067 ;;		line 402 in file "mcc_generated_files/ecan.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  tempPassedIn    4    0[COMRAM] unsigned long 
  1070 ;;  canIdType       1    4[COMRAM] unsigned char 
  1071 ;;  passedInEIDH    2    5[COMRAM] PTR unsigned char 
  1072 ;;		 -> CAN_transmit@tempEIDH(1), 
  1073 ;;  passedInEIDL    2    7[COMRAM] PTR unsigned char 
  1074 ;;		 -> CAN_transmit@tempEIDL(1), 
  1075 ;;  passedInSIDH    2    9[COMRAM] PTR unsigned char 
  1076 ;;		 -> CAN_transmit@tempSIDH(1), 
  1077 ;;  passedInSIDL    2   11[COMRAM] PTR unsigned char 
  1078 ;;		 -> CAN_transmit@tempSIDL(1), 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  wipSIDL         1   17[COMRAM] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1090 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;Total ram usage:       18 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 3
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_CAN_transmit
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text2
  1105  007B0E                     __ptext2:
  1106                           	callstack 0
  1107  007B0E                     _convertCANid2Reg:
  1108                           	callstack 26
  1109  007B0E                     
  1110                           ;mcc_generated_files/ecan.c: 406:     if (canIdType == 2) {
  1111  007B0E  0E02               	movlw	2
  1112  007B10  1805               	xorwf	convertCANid2Reg@canIdType^0,w,c
  1113  007B12  A4D8               	btfss	status,2,c
  1114  007B14  EF8E  F03D         	goto	u271
  1115  007B18  EF90  F03D         	goto	u270
  1116  007B1C                     u271:
  1117  007B1C  EF1E  F03E         	goto	l1763
  1118  007B20                     u270:
  1119  007B20                     
  1120                           ;mcc_generated_files/ecan.c: 409:         *passedInEIDL = 0xFF & tempPassedInID;
  1121  007B20  0060  F023  FFD9   	movff	convertCANid2Reg@passedInEIDL,fsr2l
  1122  007B26  0060  F027  FFDA   	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  1123  007B2C  0060  F007  FFDF   	movff	convertCANid2Reg@tempPassedInID,indf2
  1124  007B32                     
  1125                           ;mcc_generated_files/ecan.c: 410:         tempPassedInID = tempPassedInID >> 8;
  1126  007B32  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1127  007B36  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1128  007B3A  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1129  007B3E  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1130  007B42  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1131  007B46  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1132  007B4A  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1133  007B4E  6A11               	clrf	(??_convertCANid2Reg+3)^0,c
  1134  007B50  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1135  007B54  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1136  007B58  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1137  007B5C  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1138  007B60                     
  1139                           ;mcc_generated_files/ecan.c: 413:         *passedInEIDH = 0xFF & tempPassedInID;
  1140  007B60  0060  F01B  FFD9   	movff	convertCANid2Reg@passedInEIDH,fsr2l
  1141  007B66  0060  F01F  FFDA   	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  1142  007B6C  0060  F007  FFDF   	movff	convertCANid2Reg@tempPassedInID,indf2
  1143                           
  1144                           ;mcc_generated_files/ecan.c: 414:         tempPassedInID = tempPassedInID >> 8;
  1145  007B72  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1146  007B76  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1147  007B7A  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1148  007B7E  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1149  007B82  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1150  007B86  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1151  007B8A  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1152  007B8E  6A11               	clrf	(??_convertCANid2Reg+3)^0,c
  1153  007B90  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1154  007B94  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1155  007B98  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1156  007B9C  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1157  007BA0                     
  1158                           ;mcc_generated_files/ecan.c: 418:         wipSIDL = 0x03 & tempPassedInID;
  1159  007BA0  5001               	movf	convertCANid2Reg@tempPassedInID^0,w,c
  1160  007BA2  0B03               	andlw	3
  1161  007BA4  6E12               	movwf	convertCANid2Reg@wipSIDL^0,c
  1162  007BA6                     
  1163                           ;mcc_generated_files/ecan.c: 419:         tempPassedInID = tempPassedInID << 3;
  1164  007BA6  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1165  007BAA  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1166  007BAE  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1167  007BB2  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1168  007BB6  0E03               	movlw	3
  1169  007BB8                     u285:
  1170  007BB8  90D8               	bcf	status,0,c
  1171  007BBA  360E               	rlcf	??_convertCANid2Reg^0,f,c
  1172  007BBC  360F               	rlcf	(??_convertCANid2Reg+1)^0,f,c
  1173  007BBE  3610               	rlcf	(??_convertCANid2Reg+2)^0,f,c
  1174  007BC0  3611               	rlcf	(??_convertCANid2Reg+3)^0,f,c
  1175  007BC2  2EE8               	decfsz	wreg,f,c
  1176  007BC4  EFDC  F03D         	goto	u285
  1177  007BC8  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1178  007BCC  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1179  007BD0  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1180  007BD4  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1181  007BD8                     
  1182                           ;mcc_generated_files/ecan.c: 420:         wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  1183  007BD8  5001               	movf	convertCANid2Reg@tempPassedInID^0,w,c
  1184  007BDA  0BE0               	andlw	224
  1185  007BDC  2412               	addwf	convertCANid2Reg@wipSIDL^0,w,c
  1186  007BDE  6E12               	movwf	convertCANid2Reg@wipSIDL^0,c
  1187  007BE0                     
  1188                           ;mcc_generated_files/ecan.c: 421:         wipSIDL = (uint8_t)(wipSIDL + 0x08);
  1189  007BE0  5012               	movf	convertCANid2Reg@wipSIDL^0,w,c
  1190  007BE2  0F08               	addlw	8
  1191  007BE4  6E12               	movwf	convertCANid2Reg@wipSIDL^0,c
  1192  007BE6                     
  1193                           ;mcc_generated_files/ecan.c: 422:         *passedInSIDL = (uint8_t)(0xEB & wipSIDL);
  1194  007BE6  5012               	movf	convertCANid2Reg@wipSIDL^0,w,c
  1195  007BE8  0BEB               	andlw	235
  1196  007BEA  0060  F033  FFD9   	movff	convertCANid2Reg@passedInSIDL,fsr2l
  1197  007BF0  0060  F037  FFDA   	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  1198  007BF6  6EDF               	movwf	indf2,c
  1199  007BF8                     l1759:
  1200                           
  1201                           ;mcc_generated_files/ecan.c: 425:         tempPassedInID = tempPassedInID >> 8;
  1202  007BF8  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1203  007BFC  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1204  007C00  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1205  007C04  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1206  007C08  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1207  007C0C  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1208  007C10  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1209  007C14  6A11               	clrf	(??_convertCANid2Reg+3)^0,c
  1210  007C16  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1211  007C1A  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1212  007C1E  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1213  007C22  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1214  007C26                     
  1215                           ;mcc_generated_files/ecan.c: 426:         *passedInSIDH = 0xFF & tempPassedInID;
  1216  007C26  0060  F02B  FFD9   	movff	convertCANid2Reg@passedInSIDH,fsr2l
  1217  007C2C  0060  F02F  FFDA   	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  1218  007C32  0060  F007  FFDF   	movff	convertCANid2Reg@tempPassedInID,indf2
  1219                           
  1220                           ;mcc_generated_files/ecan.c: 427:     }
  1221  007C38  EF52  F03E         	goto	l401
  1222  007C3C                     l1763:
  1223                           
  1224                           ;mcc_generated_files/ecan.c: 429:     {;mcc_generated_files/ecan.c: 430:         *passed
      +                          InEIDH = 0;
  1225  007C3C  0060  F01B  FFD9   	movff	convertCANid2Reg@passedInEIDH,fsr2l
  1226  007C42  0060  F01F  FFDA   	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  1227  007C48  0E00               	movlw	0
  1228  007C4A  6EDF               	movwf	indf2,c
  1229                           
  1230                           ;mcc_generated_files/ecan.c: 431:         *passedInEIDL = 0;
  1231  007C4C  0060  F023  FFD9   	movff	convertCANid2Reg@passedInEIDL,fsr2l
  1232  007C52  0060  F027  FFDA   	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  1233  007C58  0E00               	movlw	0
  1234  007C5A  6EDF               	movwf	indf2,c
  1235  007C5C                     
  1236                           ;mcc_generated_files/ecan.c: 432:         tempPassedInID = tempPassedInID << 5;
  1237  007C5C  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1238  007C60  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1239  007C64  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1240  007C68  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1241  007C6C  0E05               	movlw	5
  1242  007C6E                     u295:
  1243  007C6E  90D8               	bcf	status,0,c
  1244  007C70  360E               	rlcf	??_convertCANid2Reg^0,f,c
  1245  007C72  360F               	rlcf	(??_convertCANid2Reg+1)^0,f,c
  1246  007C74  3610               	rlcf	(??_convertCANid2Reg+2)^0,f,c
  1247  007C76  3611               	rlcf	(??_convertCANid2Reg+3)^0,f,c
  1248  007C78  2EE8               	decfsz	wreg,f,c
  1249  007C7A  EF37  F03E         	goto	u295
  1250  007C7E  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1251  007C82  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1252  007C86  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1253  007C8A  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1254  007C8E                     
  1255                           ;mcc_generated_files/ecan.c: 433:         *passedInSIDL = 0xFF & tempPassedInID;
  1256  007C8E  0060  F033  FFD9   	movff	convertCANid2Reg@passedInSIDL,fsr2l
  1257  007C94  0060  F037  FFDA   	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  1258  007C9A  0060  F007  FFDF   	movff	convertCANid2Reg@tempPassedInID,indf2
  1259  007CA0  EFFC  F03D         	goto	l1759
  1260  007CA4                     l401:
  1261  007CA4  0012               	return		;funcret
  1262  007CA6                     __end_of_convertCANid2Reg:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _ADCC_GetSingleConversion *****************
  1266 ;; Defined at:
  1267 ;;		line 137 in file "mcc_generated_files/adcc.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  channel         1    wreg     enum E22597
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  channel         1    4[COMRAM] enum E22597
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  2    0[COMRAM] unsigned short 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;Total ram usage:        5 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 3
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text3
  1296  007A32                     __ptext3:
  1297                           	callstack 0
  1298  007A32                     _ADCC_GetSingleConversion:
  1299                           	callstack 27
  1300                           
  1301                           ;incstack = 0
  1302                           ;ADCC_GetSingleConversion@channel stored from wreg
  1303  007A32  6E05               	movwf	ADCC_GetSingleConversion@channel^0,c
  1304  007A34                     
  1305                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  1306  007A34  0060  F017  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  1307  007A3A                     
  1308                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  1309  007A3A  013E               	movlb	62	; () banked
  1310  007A3C  8FF8               	bsf	248,7,b	;volatile
  1311  007A3E                     
  1312                           ; BSR set to: 62
  1313                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  1314  007A3E  9DF8               	bcf	248,6,b	;volatile
  1315  007A40                     
  1316                           ; BSR set to: 62
  1317                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  1318  007A40  81F8               	bsf	248,0,b	;volatile
  1319  007A42                     l516:
  1320                           
  1321                           ; BSR set to: 62
  1322                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  1323  007A42  B1F8               	btfsc	248,0,b	;volatile
  1324  007A44  EF26  F03D         	goto	u331
  1325  007A48  EF28  F03D         	goto	u330
  1326  007A4C                     u331:
  1327  007A4C  EF21  F03D         	goto	l516
  1328  007A50                     u330:
  1329  007A50                     
  1330                           ; BSR set to: 62
  1331                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  1332  007A50  51F0               	movf	240,w,b	;volatile
  1333  007A52  6E04               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  1334  007A54  6A03               	clrf	??_ADCC_GetSingleConversion^0,c
  1335  007A56  51EF               	movf	239,w,b	;volatile
  1336  007A58  2403               	addwf	??_ADCC_GetSingleConversion^0,w,c
  1337  007A5A  6E01               	movwf	?_ADCC_GetSingleConversion^0,c
  1338  007A5C  0E00               	movlw	0
  1339  007A5E  2004               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  1340  007A60  6E02               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  1341  007A62                     
  1342                           ; BSR set to: 62
  1343  007A62  0012               	return		;funcret
  1344  007A64                     __end_of_ADCC_GetSingleConversion:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _INTERRUPT_InterruptManager *****************
  1348 ;; Defined at:
  1349 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, pclath, tosl, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;Total ram usage:        0 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 2
  1370 ;; This function calls:
  1371 ;;		_ECAN_WAKI_ISR
  1372 ;; This function is called by:
  1373 ;;		Interrupt level 2
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text4
  1378  007A0E                     __ptext4:
  1379                           	callstack 0
  1380  007A0E                     _INTERRUPT_InterruptManager:
  1381                           	callstack 26
  1382  007A0E                     
  1383                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE5bits.WAKIE == 1 && PIR5bits.WAK
      +                          IF == 1)
  1384  007A0E  0139               	movlb	57	; () banked
  1385  007A10  AD95               	btfss	149,6,b	;volatile
  1386  007A12  EF0D  F03D         	goto	i2u23_41
  1387  007A16  EF0F  F03D         	goto	i2u23_40
  1388  007A1A                     i2u23_41:
  1389  007A1A  EF18  F03D         	goto	i2l425
  1390  007A1E                     i2u23_40:
  1391  007A1E                     
  1392                           ; BSR set to: 57
  1393  007A1E  ADA5               	btfss	165,6,b	;volatile
  1394  007A20  EF14  F03D         	goto	i2u24_41
  1395  007A24  EF16  F03D         	goto	i2u24_40
  1396  007A28                     i2u24_41:
  1397  007A28  EF18  F03D         	goto	i2l425
  1398  007A2C                     i2u24_40:
  1399  007A2C                     
  1400                           ; BSR set to: 57
  1401                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         ECAN_WAKI_ISR();
  1402  007A2C  ECF7  F03C         	call	_ECAN_WAKI_ISR	;wreg free
  1403  007A30                     i2l425:
  1404  007A30  0011               	retfie		f
  1405  007A32                     __end_of_INTERRUPT_InterruptManager:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function _ECAN_WAKI_ISR *****************
  1409 ;; Defined at:
  1410 ;;		line 444 in file "mcc_generated_files/ecan.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, pclath, tosl, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;Total ram usage:        0 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 1
  1431 ;; This function calls:
  1432 ;;		Absolute function
  1433 ;;		_WakeUpDefaultInterruptHandler
  1434 ;; This function is called by:
  1435 ;;		_INTERRUPT_InterruptManager
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text5
  1440  0079EE                     __ptext5:
  1441                           	callstack 0
  1442  0079EE                     _ECAN_WAKI_ISR:
  1443                           	callstack 26
  1444  0079EE                     
  1445                           ;mcc_generated_files/ecan.c: 446:     WakeUpInterruptHandler();
  1446  0079EE  D802               	call	i2u7_48
  1447  0079F0  EF04  F03D         	goto	i2u7_49
  1448  0079F4                     i2u7_48:
  1449  0079F4  0005               	push	
  1450  0079F6  6EFA               	movwf	pclath,c
  1451  0079F8  503A               	movf	_WakeUpInterruptHandler^0,w,c
  1452  0079FA  6EFD               	movwf	tosl,c
  1453  0079FC  503B               	movf	(_WakeUpInterruptHandler+1)^0,w,c
  1454  0079FE  6EFE               	movwf	tosh,c
  1455  007A00  50F8               	movf	tblptru,w,c
  1456  007A02  6EFF               	movwf	tosu,c
  1457  007A04  50FA               	movf	pclath,w,c
  1458  007A06  0012               	return		;indir
  1459  007A08                     i2u7_49:
  1460  007A08                     
  1461                           ;mcc_generated_files/ecan.c: 447:     PIR5bits.WAKIF = 0;
  1462  007A08  0139               	movlb	57	; () banked
  1463  007A0A  9DA5               	bcf	165,6,b	;volatile
  1464  007A0C                     
  1465                           ; BSR set to: 57
  1466  007A0C  0012               	return		;funcret
  1467  007A0E                     __end_of_ECAN_WAKI_ISR:
  1468                           	callstack 0
  1469                           
  1470 ;; *************** function _WakeUpDefaultInterruptHandler *****************
  1471 ;; Defined at:
  1472 ;;		line 63 in file "mcc_generated_files/ecan.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		None
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_ECAN_Initialize
  1496 ;;		_ECAN_WAKI_ISR
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text6
  1501  0079D2                     __ptext6:
  1502                           	callstack 0
  1503  0079D2                     _WakeUpDefaultInterruptHandler:
  1504                           	callstack 26
  1505  0079D2  0012               	return		;funcret
  1506  0079D4                     __end_of_WakeUpDefaultInterruptHandler:
  1507                           	callstack 0
  1508                           
  1509                           ;
  1510                           ; Interrupt Vector Table @ 0x8
  1511                           ;
  1512                           
  1513                           	psect	ivt0x8
  1514  000008                     __pivt0x8:
  1515                           	callstack 0
  1516  000008                     ivt0x8_base:
  1517                           	callstack 0
  1518                           
  1519                           ; high-priority vector
  1520  000008  EF07  F03D         	goto	_INTERRUPT_InterruptManager
  1521  000018                     	org	16
  1522                           
  1523                           ; low-priority vector
  1524  000018  00FF               	reset	
  1525  0000                     
  1526                           	psect	text7
  1527  000000                     __ptext7:
  1528                           	callstack 0
  1529  000000                     
  1530                           	psect	rparam
  1531  0000                     
  1532                           	psect	idloc
  1533                           
  1534                           ;Config register IDLOC0 @ 0x200000
  1535                           ;	unspecified, using default values
  1536  200000                     	org	2097152
  1537  200000  0FFF               	dw	4095
  1538                           
  1539                           ;Config register IDLOC1 @ 0x200002
  1540                           ;	unspecified, using default values
  1541  200002                     	org	2097154
  1542  200002  0FFF               	dw	4095
  1543                           
  1544                           ;Config register IDLOC2 @ 0x200004
  1545                           ;	unspecified, using default values
  1546  200004                     	org	2097156
  1547  200004  0FFF               	dw	4095
  1548                           
  1549                           ;Config register IDLOC3 @ 0x200006
  1550                           ;	unspecified, using default values
  1551  200006                     	org	2097158
  1552  200006  0FFF               	dw	4095
  1553                           
  1554                           ;Config register IDLOC4 @ 0x200008
  1555                           ;	unspecified, using default values
  1556  200008                     	org	2097160
  1557  200008  0FFF               	dw	4095
  1558                           
  1559                           ;Config register IDLOC5 @ 0x20000A
  1560                           ;	unspecified, using default values
  1561  20000A                     	org	2097162
  1562  20000A  0FFF               	dw	4095
  1563                           
  1564                           ;Config register IDLOC6 @ 0x20000C
  1565                           ;	unspecified, using default values
  1566  20000C                     	org	2097164
  1567  20000C  0FFF               	dw	4095
  1568                           
  1569                           ;Config register IDLOC7 @ 0x20000E
  1570                           ;	unspecified, using default values
  1571  20000E                     	org	2097166
  1572  20000E  0FFF               	dw	4095
  1573                           
  1574                           	psect	config
  1575                           
  1576                           ;Config register CONFIG1L @ 0x300000
  1577                           ;	External Oscillator Selection
  1578                           ;	FEXTOSC = OFF, Oscillator not enabled
  1579                           ;	Reset Oscillator Selection
  1580                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1581  300000                     	org	3145728
  1582  300000  FC                 	db	252
  1583                           
  1584                           ;Config register CONFIG1H @ 0x300001
  1585                           ;	Clock out Enable bit
  1586                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1587                           ;	PRLOCKED One-Way Set Enable bit
  1588                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1589                           ;	Clock Switch Enable bit
  1590                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1591                           ;	Fail-Safe Clock Monitor Enable bit
  1592                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1593  300001                     	org	3145729
  1594  300001  FF                 	db	255
  1595                           
  1596                           ;Config register CONFIG2L @ 0x300002
  1597                           ;	MCLR Enable bit
  1598                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1599                           ;	Power-up timer selection bits
  1600                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1601                           ;	Multi-vector enable bit
  1602                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  1603                           ;	IVTLOCK bit One-way set enable bit
  1604                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1605                           ;	Low Power BOR Enable bit
  1606                           ;	LPBOREN = OFF, ULPBOR disabled
  1607                           ;	Brown-out Reset Enable bits
  1608                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1609  300002                     	org	3145730
  1610  300002  F7                 	db	247
  1611                           
  1612                           ;Config register CONFIG2H @ 0x300003
  1613                           ;	Brown-out Reset Voltage Selection bits
  1614                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1615                           ;	ZCD Disable bit
  1616                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1617                           ;	PPSLOCK bit One-Way Set Enable bit
  1618                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1619                           ;	Stack Full/Underflow Reset Enable bit
  1620                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1621                           ;	Debugger Enable bit
  1622                           ;	DEBUG = OFF, Background debugger disabled
  1623                           ;	Extended Instruction Set Enable bit
  1624                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1625  300003                     	org	3145731
  1626  300003  FF                 	db	255
  1627                           
  1628                           ;Config register CONFIG3L @ 0x300004
  1629                           ;	WDT Period selection bits
  1630                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1631                           ;	WDT operating mode
  1632                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1633  300004                     	org	3145732
  1634  300004  9F                 	db	159
  1635                           
  1636                           ;Config register CONFIG3H @ 0x300005
  1637                           ;	WDT Window Select bits
  1638                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1639                           ;	WDT input clock selector
  1640                           ;	WDTCCS = SC, Software Control
  1641  300005                     	org	3145733
  1642  300005  FF                 	db	255
  1643                           
  1644                           ;Config register CONFIG4L @ 0x300006
  1645                           ;	Boot Block Size selection bits
  1646                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1647                           ;	Boot Block enable bit
  1648                           ;	BBEN = OFF, Boot block disabled
  1649                           ;	Storage Area Flash enable bit
  1650                           ;	SAFEN = OFF, SAF disabled
  1651                           ;	Application Block write protection bit
  1652                           ;	WRTAPP = OFF, Application Block not write protected
  1653  300006                     	org	3145734
  1654  300006  FF                 	db	255
  1655                           
  1656                           ;Config register CONFIG4H @ 0x300007
  1657                           ;	Configuration Register Write Protection bit
  1658                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  1659                           ;	Boot Block Write Protection bit
  1660                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  1661                           ;	Data EEPROM Write Protection bit
  1662                           ;	WRTD = OFF, Data EEPROM not write-protected
  1663                           ;	SAF Write protection bit
  1664                           ;	WRTSAF = OFF, SAF not Write Protected
  1665                           ;	Low Voltage Programming Enable bit
  1666                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1667  300007                     	org	3145735
  1668  300007  FF                 	db	255
  1669                           
  1670                           ;Config register CONFIG5L @ 0x300008
  1671                           ;	PFM and Data EEPROM Code Protection bit
  1672                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1673  300008                     	org	3145736
  1674  300008  FF                 	db	255
  1675                           
  1676                           ;Config register CONFIG5H @ 0x300009
  1677                           ;	unspecified, using default values
  1678  300009                     	org	3145737
  1679  300009  FF                 	db	255
  1680                           tosu	equ	0x3FFF
  1681                           tosh	equ	0x3FFE
  1682                           tosl	equ	0x3FFD
  1683                           stkptr	equ	0x3FFC
  1684                           pclatu	equ	0x3FFB
  1685                           pclath	equ	0x3FFA
  1686                           pcl	equ	0x3FF9
  1687                           tblptru	equ	0x3FF8
  1688                           tblptrh	equ	0x3FF7
  1689                           tblptrl	equ	0x3FF6
  1690                           tablat	equ	0x3FF5
  1691                           prodh	equ	0x3FF4
  1692                           prodl	equ	0x3FF3
  1693                           indf0	equ	0x3FEF
  1694                           postinc0	equ	0x3FEE
  1695                           postdec0	equ	0x3FED
  1696                           preinc0	equ	0x3FEC
  1697                           plusw0	equ	0x3FEB
  1698                           fsr0h	equ	0x3FEA
  1699                           fsr0l	equ	0x3FE9
  1700                           wreg	equ	0x3FE8
  1701                           indf1	equ	0x3FE7
  1702                           postinc1	equ	0x3FE6
  1703                           postdec1	equ	0x3FE5
  1704                           preinc1	equ	0x3FE4
  1705                           plusw1	equ	0x3FE3
  1706                           fsr1h	equ	0x3FE2
  1707                           fsr1l	equ	0x3FE1
  1708                           bsr	equ	0x3FE0
  1709                           indf2	equ	0x3FDF
  1710                           postinc2	equ	0x3FDE
  1711                           postdec2	equ	0x3FDD
  1712                           preinc2	equ	0x3FDC
  1713                           plusw2	equ	0x3FDB
  1714                           fsr2h	equ	0x3FDA
  1715                           fsr2l	equ	0x3FD9
  1716                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    WakeUpInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), WakeUpDefaultInterruptHandler(), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@CanReadyToDrive(COMRAM[14]), main@CanCurrentData(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_CAN_transmit
    _CAN_transmit->_convertCANid2Reg

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0    3758
                                             24 COMRAM    33    33      0
           _ADCC_GetSingleConversion
                       _CAN_transmit
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    3364
                                             18 COMRAM     6     4      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    1928
                                              0 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           0     0      0       0
                      _ECAN_WAKI_ISR
 ---------------------------------------------------------------------------------
 (4) _ECAN_WAKI_ISR                                        0     0      0       0
                   Absolute function *
      _WakeUpDefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (5) _WakeUpDefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _CAN_transmit
     _convertCANid2Reg

 _INTERRUPT_InterruptManager (ROOT)
   _ECAN_WAKI_ISR
     Absolute function(Fake) *
     _WakeUpDefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      3B       1       62.1%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       6        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 19 18:37:11 2022

                                   l401 7CA4                                     l360 7EE4  
                                   l363 7FFA                                     l516 7A42  
                                   l358 7DCE                                     l519 7A62  
                                   l359 7FFA                                     u300 7CC6  
                                   u301 7CC2                                     u310 7DDC  
                                   u311 7DD8                                     u320 7EF2  
                                   u321 7EEE                                     u330 7A50  
                                   u331 7A4C                                     u340 7ACE  
                                   u341 7ACA                                     u270 7B20  
                                   u350 7AE6                                     u271 7B1C  
                                   u351 7AE2                                     u285 7BB8  
                                   u295 7C6E                                     u367 7AFC  
                                   tosl 003FFD                                     wreg 003FE8  
                                  l1801 7DA8                                    l1811 7E34  
                                  l1803 7DB8                                    l1741 7B0E  
                                  l1821 7E5E                                    l1813 7E3A  
                                  l1805 7DC8                                    l1901 7AD6  
                                  l1751 7BA6                                    l1743 7B20  
                                  l1831 7EAE                                    l1823 7E6E  
                                  l1815 7E40                                    l1807 7DCA  
                                  l1903 7AE6                                    l1761 7C26  
                                  l1753 7BD8                                    l1745 7B32  
                                  l1841 7EF2                                    l1833 7EBE  
                                  l1825 7E7E                                    l1817 7E46  
                                  l1809 7DDC                                    l1905 7AF2  
                                  l1755 7BE0                                    l1747 7B60  
                                  l1763 7C3C                                    l1739 7B0E  
                                  l1851 7F62                                    l1843 7F4A  
                                  l1835 7ECE                                    l1827 7E8E  
                                  l1819 7E4C                                    l1907 7AF6  
                                  l1765 7C5C                                    l1757 7BE6  
                                  l1749 7BA0                                    l1861 7FB4  
                                  l1853 7F74                                    l1845 7F50  
                                  l1837 7EDE                                    l1829 7E9E  
                                  l1781 7D24                                    l1773 7CA6  
                                  l1767 7C8E                                    l1759 7BF8  
                                  l1863 7FC4                                    l1855 7F84  
                                  l1847 7F56                                    l1791 7D58  
                                  l1783 7D2A                                    l1775 7CB6  
                                  l1881 7A40                                    l1865 7FD4  
                                  l1857 7F94                                    l1849 7F5C  
                                  l1793 7D68                                    l1785 7D30  
                                  l1777 7CC6                                    l1883 7A50  
                                  l1875 7A34                                    l1867 7FE4  
                                  l1859 7FA4                                    l1795 7D78  
                                  l1787 7D36                                    l1779 7D1E  
                                  l1891 7AAA                                    l1877 7A3A  
                                  l1869 7FF4                                    l1797 7D88  
                                  l1789 7D48                                    l1893 7AAE  
                                  l1879 7A3E                                    l1799 7D98  
                                  l1895 7AB2                                    l1887 7A64  
                                  l1897 7ABE                                    l1889 7A9C  
                                  l1899 7ACE                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUE 003A81  
                           main@current 001C                                    _main 7A64  
          convertCANid2Reg@passedInEIDH 0006            convertCANid2Reg@passedInEIDL 0008  
                                  fsr2h 003FDA                                    indf2 003FDF  
                                  fsr2l 003FD9            convertCANid2Reg@passedInSIDH 000A  
          convertCANid2Reg@passedInSIDL 000C                                    start 7FFC  
                          ___param_bank 000000                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                                   ?_main 0001  
                                 _ADCLK 003EFF                                   _ADCNT 003EEB  
                                 _ADPCH 003EF1                                   _ADREF 003EFD  
                                 _ADRPT 003EEC                                   i2l340 79D2  
                                 i2l407 7A0C                                   i2l425 7A30  
                                 _OSCEN 0039DD                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                  __end_of_CAN_transmit 7FFC                                   pclath 003FFA  
                                 status 003FD8                    CAN_transmit@tempEIDH 0015  
                  CAN_transmit@tempEIDL 0016                    CAN_transmit@tempSIDH 0017  
                  CAN_transmit@tempSIDL 0018                         __initialization 79D4  
                          __end_of_main 7B0E             ?_INTERRUPT_InterruptManager 0001  
                                ??_main 0019                           __activetblptr 000002  
       ??_WakeUpDefaultInterruptHandler 0001                                  _ADACCH 003EE9  
                                _ADACCL 003EE8                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                                _ADERRH 003EE3                                  _ADERRL 003EE2  
                                _CANCON 003F8F                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADRESH 003EF0  
                                _ADRESL 003EEF                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                                _CIOCON 003700                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _RB4PPS 003A0C                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                i2l1435 79EE                                  i2l1437 7A08  
                                i2l1625 7A0E                                  i2l1627 7A1E  
                                i2l1629 7A2C                                  _INLVLA 003A44  
                                _INLVLB 003A54                                  _INLVLC 003A64  
                                _INLVLE 003A84                                  _OSCFRQ 0039DF  
                                _RXB0D0 003F86                                  _RXB0D1 003F87  
                                _RXB0D2 003F88                                  _RXB0D3 003F89  
                                _RXB0D4 003F8A                                  _RXB1D0 0037F6  
                                _RXB0D5 003F8B                                  _RXB1D1 0037F7  
                                _RXB0D6 003F8C                                  _RXB1D2 0037F8  
                                _RXB0D7 003F8D                                  _RXB1D3 0037F9  
                                _RXB1D4 0037FA                                  _RXB1D5 0037FB  
                                _RXB1D6 0037FC                                  _RXB1D7 0037FD  
                                _TXB0D0 0037E6                                  _TXB0D1 0037E7  
                                _TXB0D2 0037E8                                  _TXB0D3 0037E9  
                                _TXB0D4 0037EA                                  _TXB1D0 0037D6  
                                _TXB0D5 0037EB                                  _TXB1D1 0037D7  
                                _TXB0D6 0037EC                                  _TXB1D2 0037D8  
                                _TXB0D7 0037ED                                  _TXB1D3 0037D9  
                                _TXB1D4 0037DA                                  _TXB2D0 0037C6  
                                _TXB1D5 0037DB                                  _TXB2D1 0037C7  
                                _TXB1D6 0037DC                                  _TXB2D2 0037C8  
                                _TXB1D7 0037DD                                  _TXB2D3 0037C9  
                                _TXB2D4 0037CA                                  _TXB2D5 0037CB  
                                _TXB2D6 0037CC                                  _TXB2D7 0037CD  
                                i2u7_48 79F4                                  i2u7_49 7A08  
                __size_of_ECAN_WAKI_ISR 0020                                  isa$std 000001  
             __size_of_convertCANid2Reg 0198                                  tblptru 003FF8  
     __size_of_ADCC_GetSingleConversion 0032               ?_ADCC_GetSingleConversion 0001  
                            __accesstop 0060                 __end_of__initialization 79E4  
                         ___rparam_used 000001                          __pcstackCOMRAM 0001  
                 __size_of_CAN_transmit 0356                     main@CanReadyToDrive 001E  
                         _ECAN_WAKI_ISR 79EE   __end_of_WakeUpDefaultInterruptHandler 79D4  
__size_of_WakeUpDefaultInterruptHandler 0002           _WakeUpDefaultInterruptHandler 79D2  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                            _CAN_transmit 7CA6  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _ECANCON 003F91                                 _ADPREVH 003EEE  
                               _ADPREVL 003EED                                 _CANSTAT 003F8E  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                               _BRGCON1 003703                                 _BRGCON2 003704  
                               _BRGCON3 003705                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                          ?_ECAN_WAKI_ISR 0001  
                               i2u23_40 7A1E                                 i2u23_41 7A1A  
                               i2u24_40 7A2C                                 i2u24_41 7A28  
                               _RXB0DLC 003F85                                 _RXB1DLC 0037F5  
                               _OSCTUNE 0039DE                                 _TXB0DLC 0037E5  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _TXB1DLC 0037D5  
                               _TXB2DLC 0037C5                                 __Hparam 0000  
                               __Lparam 0000                                 __pcinit 79D4  
                               __ramtop 1000                                 __ptext0 7A64  
                               __ptext1 7CA6                                 __ptext2 7B0E  
                               __ptext3 7A32                                 __ptext4 7A0E  
                               __ptext5 79EE                                 __ptext6 79D2  
                               __ptext7 0000                        _convertCANid2Reg 7B0E  
                  end_of_initialization 79E4                  _WakeUpInterruptHandler 003A  
                         __Lmediumconst 0000        fp__WakeUpDefaultInterruptHandler 0000  
        ?_WakeUpDefaultInterruptHandler 0001                                 postinc2 003FDE  
      __end_of_ADCC_GetSingleConversion 7A64                        main@ReadyToDrive 001A  
                             _PORTCbits 003FCC                         ??_ECAN_WAKI_ISR 0001  
                CAN_transmit@tempCanMsg 0013                     start_initialization 79D4  
                            ivt0x8_base 0008                      main@CanCurrentData 002C  
              _ADCC_GetSingleConversion 7A32                             __pbssCOMRAM 003A  
                  main@ReadyToDriveSent 001B                __end_of_convertCANid2Reg 7CA6  
       ADCC_GetSingleConversion@channel 0005            ??_INTERRUPT_InterruptManager 0001  
                           _COMSTATbits 003F90                                _CANRXPPS 003AED  
        convertCANid2Reg@tempPassedInID 0001                                _PIE5bits 003995  
   __size_of_INTERRUPT_InterruptManager 0024                                _PIR5bits 0039A5  
                              _RXB0EIDH 003F83                                _RXB0EIDL 003F84  
                              _RXB1EIDH 0037F3                                _RXB1EIDL 0037F4  
                              _RXB0SIDH 003F81                                _RXB0SIDL 003F82  
                              _RXF0EIDH 0037A2                                _RXB1SIDH 0037F1  
                              _RXF0EIDL 0037A3                                _RXB1SIDL 0037F2  
                              _RXF1EIDH 0037A6                                _RXF1EIDL 0037A7  
                              _RXF2EIDH 0037AA                                _RXF2EIDL 0037AB  
                              _RXF3EIDH 0037AE                                _RXF3EIDL 0037AF  
                              _RXF4EIDH 0037B2                                _RXF4EIDL 0037B3  
                              _RXF5EIDH 0037B6                                _RXF5EIDL 0037B7  
                              _RXF0SIDH 0037A0                                _RXF0SIDL 0037A1  
                              _RXF1SIDH 0037A4                                _TXB0EIDH 0037E3  
                              _RXF1SIDL 0037A5                                _TXB0EIDL 0037E4  
                              _RXF2SIDH 0037A8                                _TXB1EIDH 0037D3  
                              _RXF2SIDL 0037A9                                _TXB1EIDL 0037D4  
                              _RXF3SIDH 0037AC                                _TXB2EIDH 0037C3  
                              _RXF3SIDL 0037AD                                _TXB2EIDL 0037C4  
                              _RXF4SIDH 0037B0                                _RXF4SIDL 0037B1  
                              _RXF5SIDH 0037B4                                _RXF5SIDL 0037B5  
                              _RXM0EIDH 0037BA                                _RXM0EIDL 0037BB  
                              _RXM1EIDH 0037BE                                _TXB0SIDH 0037E1  
                              _RXM1EIDL 0037BF                                _TXB0SIDL 0037E2  
                              _TXB1SIDH 0037D1                                _TXB1SIDL 0037D2  
                              _TXB2SIDH 0037C1                                _TXB2SIDL 0037C2  
                              _RXM0SIDH 0037B8                                _RXM0SIDL 0037B9  
                              _RXM1SIDH 0037BC                                _RXM1SIDL 0037BD  
                            _ADCON0bits 003EF8                              _ADCON1bits 003EF9  
                            _ADCON2bits 003EFA                              _ADCON3bits 003EFB  
                           _INTCON0bits 003FD2                              _ADSTATbits 003EFC  
                              __Hrparam 0000                                __Lrparam 0000  
             convertCANid2Reg@canIdType 0005                 convertCANid2Reg@wipSIDL 0012  
                 __end_of_ECAN_WAKI_ISR 7A0E                                __pivt0x8 0008  
                         __size_of_main 00AA                                isa$xinst 000000  
                         ?_CAN_transmit 0013              ??_ADCC_GetSingleConversion 0003  
    __end_of_INTERRUPT_InterruptManager 7A32              _INTERRUPT_InterruptManager 7A0E  
                           _RXB0CONbits 003F80                             _RXB1CONbits 0037F0  
                              intlevel2 0000                             _TXB0CONbits 0037E0  
                           _TXB1CONbits 0037D0                             _TXB2CONbits 0037C0  
                        ??_CAN_transmit 0015                       ?_convertCANid2Reg 0001  
                    ??_convertCANid2Reg 000E  
